name: 🚀 Deploy to EC2

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: 📥 Checkout code
        uses: actions/checkout@v3

      - name: 🧰 Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_DEFAULT_REGION }}

      - name: 🔐 Login to Amazon ECR
        run: aws ecr get-login-password | docker login --username AWS --password-stdin ${{ secrets.ECR_REPO }}

      - name: 🐳 Build and push Docker image to ECR
        run: |
          IMAGE_TAG=latest
          IMAGE_URI=${{ secrets.ECR_REPO }}:$IMAGE_TAG
          docker build -t $IMAGE_URI .
          docker push $IMAGE_URI

      - name: 🚀 Deploy to EC2 via SSH
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USER }}
          key: ${{ secrets.EC2_SSH_KEY }}
          script: |
            echo "🔐 Logging into ECR..."
            aws ecr get-login-password --region ${{ secrets.AWS_DEFAULT_REGION }} | docker login --username AWS --password-stdin ${{ secrets.ECR_REPO }}

            echo "📦 Pulling latest image..."
            docker pull ${{ secrets.ECR_REPO }}:latest

            echo "🛑 Stopping old container (if any)..."
            docker stop flask-container || true
            docker rm flask-container || true

            echo "🚀 Running new container..."
            docker run -d --name flask-container -p 80:5000 ${{ secrets.ECR_REPO }}:latest

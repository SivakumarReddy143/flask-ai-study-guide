name: Deploy Flask App to EC2 using ECR

on:
  push:
    branches: [main]

jobs:
  build-and-push:
    name: Build and Push Docker Image to ECR
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Code
        uses: actions/checkout@v2

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_DEFAULT_REGION }}

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Ensure ECR Repository Exists
        run: |
          aws ecr describe-repositories --repository-names ${{ secrets.ECR_REPO }} || \
          aws ecr create-repository --repository-name ${{ secrets.ECR_REPO }}

      - name: Build, Tag, and Push Docker Image
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          ECR_REPOSITORY: ${{ secrets.ECR_REPO }}
          IMAGE_TAG: latest
        run: |
          docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG

  deploy-to-ec2:
    name: Deploy to EC2 Instance
    runs-on: ubuntu-latest
    needs: build-and-push

    steps:
      - name: Checkout Code
        uses: actions/checkout@v2

      - name: Upload .env to EC2
        uses: appleboy/scp-action@master
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USER }}
          key: ${{ secrets.EC2_SSH_KEY }}
          source: ".env"
          target: "/home/${{ secrets.EC2_USER }}/"

      - name: Deploy Flask App via SSH
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USER }}
          key: ${{ secrets.EC2_SSH_KEY }}
          script: |
            echo "üîê Logging into ECR..."
            ACCOUNT_ID=$(aws sts get-caller-identity --query "Account" --output text)
            REGION=${{ secrets.AWS_DEFAULT_REGION }}
            REPO=${{ secrets.ECR_REPO }}
            ECR_REGISTRY="$ACCOUNT_ID.dkr.ecr.$REGION.amazonaws.com"

            aws ecr get-login-password --region $REGION | docker login --username AWS --password-stdin $ECR_REGISTRY

            echo "üì¶ Pulling latest image..."
            docker pull $ECR_REGISTRY/$REPO:latest

            echo "üõë Stopping old container (if any)..."
            docker stop flask-container || true
            docker rm flask-container || true

            echo "üöÄ Running new container..."
            docker run -d \
              --name flask-container \
              -p 5000:5000 \
              --env-file /home/${USER}/.env \
              $ECR_REGISTRY/$REPO:latest
